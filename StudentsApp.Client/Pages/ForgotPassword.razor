@page "/forgotpassword"
@using System.Text.Json;
@inject HttpClient Http
@inject AuthenticationStateProvider AuthStateProvider
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager

<h3>ForgotPassword</h3>
<p>Enter your email.</p>

<EditForm Model="forgot" OnSubmit="HandleForgot">
    <label for="email">Email</label>
    <InputText id="email" class="form-control" @bind-Value="forgot.Email" />
    <ValidationMessage For="@(() => forgot.Email)" />
    <br />
    <button type="submit" class="btn btn-primary">Send</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-succes">@succesMessage</div>
}


@code {
    string errorMessage = "";
    string succesMessage = "";

    ForgotPass forgot = new ForgotPass();


    public async Task HandleForgot()
    {
        var editContext = new EditContext(forgot);
        var isValid = editContext.Validate();

        if (isValid)
        {
            string apiUrl = "https://localhost:44363/api/identity/forgotpassword";

            try
            {
                var result = await Http.PostAsJsonAsync<ForgotPass>(apiUrl, forgot);

                if (result.IsSuccessStatusCode)
                {
                    // ResetPassword();
                    succesMessage = "Success! Check your email box!";
                }
                else
                {
                    errorMessage = "Invalid username or password";
                }
            }
            catch(Exception e)
            {
                throw new Exception(e.Message);
            }
        }
    }


    void ResetPassword() => NavigationManager.NavigateTo("/reset-password");

    public class ForgotPass
    {
        public string Email { get; set; }
    }
}
