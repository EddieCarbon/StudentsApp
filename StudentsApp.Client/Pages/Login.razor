@page "/login"
@using System.Text.Json;
@inject HttpClient Http
@inject AuthenticationStateProvider AuthStateProvider
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager

<h3>Login</h3>

<EditForm Model="user" OnSubmit="HandleLogin">
    <label for="username">Name</label>
    <InputText id="username" class="form-control" @bind-Value="user.Username" />
    <ValidationMessage For="@(() => user.Username)" />

    <label for="password">Password</label>
    <InputText id="password" class="form-control" @bind-Value="user.Password" type="password" />
    <ValidationMessage For="@(() => user.Password)" />
    <br/>
    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>


@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

<br />

<p>You do not have an account?</p>
<button @onclick="Register" class="btn btn-primary">Register</button>
<button @onclick="ForgotPassword" class="btn btn-primary">Forgot Password?</button>


@code {
    LoginUserModel user = new LoginUserModel();

    string errorMessage;

    async Task HandleLogin()
    {
        var editContext = new EditContext(user);
        var isValid = editContext.Validate();

        if (isValid)
        {
            string apiUrl = "https://localhost:44363/api/identity/login";

            var result = await Http.PostAsJsonAsync<LoginUserModel>(apiUrl, user);

            if (result.IsSuccessStatusCode)
            {
                var token = await result.Content.ReadAsStringAsync();
                TokenModel tokenData = JsonSerializer.Deserialize<TokenModel>(token);
                await LocalStorage.SetItemAsync("authToken", tokenData.token);
                await AuthStateProvider.GetAuthenticationStateAsync();

                Home();
            }
            else
            {
                errorMessage = "Invalid username or password";
            }
        }
    }

    void Register() => NavigationManager.NavigateTo("register");

    void Home() => NavigationManager.NavigateTo("/");

    void ForgotPassword() => NavigationManager.NavigateTo("/forgotpassword");

}
